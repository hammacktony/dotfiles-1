# Display things in 256 colors
set -g default-terminal "screen-256color"

# set prefix key to space
unbind C-space
set -g prefix C-space
# Also assign Ctrl-space to send the prefix to a remote session
bind-key C-space send-prefix
# index windows at 1 instead of 0 (easier keyboard nav)
set -g base-index 1
set-window-option -g pane-base-index 1
# renumber windows upon closing
set -g renumber-windows on

# Use vim keybindings
setw -g mode-keys vi

# reload tmux config
unbind r
bind r \
    source-file ~/.tmux.conf \;\
    display 'Reloaded tmux config.'

# create windows and panes in current directory
unbind '"'
bind '"' split-window -c "#{pane_current_path}"

unbind %
bind % split-window -h -c "#{pane_current_path}"

# map both c and C-c to avoid mistakes
unbind c
bind c new-window -c "#{pane_current_path}"
unbind C-c
bind C-c new-window -c "#{pane_current_path}"

# Choose session
unbind S
bind S choose-session

# Cycle windows with ctrl-shift left/right
unbind -n C-S-Left
bind-key -n C-S-Left select-window -t :-
unbind -n C-S-Right
bind-key -n C-S-Right select-window -t :+

# Move windows with Prefix-left/right
unbind Left
bind-key Left swap-window -t -1
unbind Right
bind-key Right swap-window -t +1

# Layouts
#########

# Tile all
bind = select-layout tiled

bind + select-layout main-horizontal

# Mouse mode
############

# Toggle mouse on
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

# Navigate panes
################

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

# Cycle through windows
bind l select-window -t :+
bind h select-window -t :-

# Closing panes, windows and sessions
#####################################

# Using w for closing, like in  OSX
# close panes
unbind w
bind w kill-pane
# close window
unbind C-w
bind C-w kill-window

# close sessions with q
unbind q
bind q confirm kill-session
# close server with ctrl-q
unbind C-q
bind C-q confirm kill-server

# Choose windows and sessions with tab
######################################

bind tab choose-window

# Make copy-n-paste work on OSX
###############################

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Make vim yanking work with OSX system clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh"

# statusbar --------------------------------------------------------------
# adapted from https://github.com/codegram/dotfiles/blob/master/tmux.conf

# default statusbar colors
set-option -g status-bg colour235
set-option -g status-fg yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg brightred
set-window-option -g window-status-current-bg default

# pane border
set-option -g pane-border-fg default
set-option -g pane-active-border-fg green

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# status bar
set -g status-utf8 on
set -g status-fg colour8
set -g status-bg colour234
# current session
set -g status-left ' #S '
set -g status-left-length 15
set -g status-left-fg colour229
set -g status-left-bg colour166
# window list
set -g window-status-format "#[fg=colour8] #I #[fg=colour231]#W#[fg=colour166]#F "
set -g window-status-current-format "#[fg=colour117,bg=colour31] #I #[fg=colour231]#W#[fg=colour234]#F "
set -g window-status-separator ""
